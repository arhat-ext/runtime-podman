---
# Source: template-go/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: template-go
  namespace: default
  labels:
    helm.sh/chart: template-go-0.1.0
    app.kubernetes.io/name: template-go
    app.kubernetes.io/instance: template-go
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    templateGo:
      endpoint: unix:///var/run/arhat.sock
      log:
      - file: stderr
        format: console
        level: verbose
      tls:
        caCert: /path/to/caCert
        cert: /path/to/client-cert
        enabled: false
        insecureSkipVerify: true
        key: /path/to/client-cert-key
---
# Source: template-go/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: template-go
  namespace: default
  labels:
    helm.sh/chart: template-go-0.1.0
    app.kubernetes.io/name: template-go
    app.kubernetes.io/instance: template-go
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: template-go
      app.kubernetes.io/instance: template-go
  template:
    metadata:
      labels:
        app.kubernetes.io/name: template-go
        app.kubernetes.io/instance: template-go
    spec:
      securityContext:
        {}
      tolerations:
        - key: arhat.dev/namespace
          value: default
        - key: node.kubernetes.io/unschedulable
          operator: Exists
      containers:
        - name: arhat-peripheral
          securityContext:
            {}
          image: "ghcr.io/arhat-ext/template-go:latest"
          imagePullPolicy: IfNotPresent
          command:
            - /template-go
            - -c
            - /etc/template-go/config.yaml
          # ports:
          #   - name: http
          #     containerPort: 80
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            - name: config
              mountPath: /etc/template-go
          resources:
            {}
      nodeSelector:
        arhat.dev/namespace: default
      volumes:
        - name: config
          configMap:
            name: template-go
