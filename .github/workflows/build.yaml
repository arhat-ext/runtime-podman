name: Build

# yamllint disable-line rule:truthy
on:
  check_run:
    types:
    - rerequested
    - requested_action
  pull_request:
    paths-ignore:
    - docs/**
    - cicd/deploy/charts/**
    - README.md
    branches:
    - master
    - "!deps/**"
  push:
    paths-ignore:
    - docs/**
    - cicd/deploy/charts/**
    - README.md
    branches:
    - master
    tags:
    - v*

env:
  GO111MODULE: "on"

defaults:
  run:
    shell: bash

jobs:
  build-on-linux-cgo:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/arhat-dev/builder-go:debian
    steps:
    - name: Install docker-cli in Container
      run: |
        apt update
        apt install -y apt-transport-https ca-certificates curl software-properties-common lsb-release
        curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

        apt update
        apt install -y docker-ce-cli
        docker -v

    - name: Run in Host
      uses: arhat-dev/actions-hostrun@main
      with:
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          sudo apt update
          sudo apt install -y qemu-user-static

    - uses: actions/checkout@v2
    - name: Install Extra Packages
      run: |
        apt update
        apt install -y python3-distutils=3.7.3-1 python3-lib2to3=3.7.3-1 python3=3.7.3-1

    - name: Build
      run: |
        # may need to install some packages during build process, do not run in parallel
        CGO_ENABLED=1 make runtime-podman.linux.all

    - name: Package
      run: |
        make package.runtime-podman.linux.all

    - name: Hash
      run: |
        cd build
        sha256sum runtime-podman.linux* > sha256.linux.txt
        sha512sum runtime-podman.linux* > sha512.linux.txt
        md5sum runtime-podman.linux* > md5.linux.txt
        cd -

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-on-linux-cgo
        path: build

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
    - build-on-linux-cgo

    runs-on: ubuntu-latest
    steps:
    - name: Download linux cgo builds
      uses: actions/download-artifact@v2
      with:
        name: build-on-linux-cgo
        path: build

    - name: Extract tag name
      id: extract_tag
      run: |
        echo "::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})"

    - name: Build changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v1.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
        # yamllint disable rule:line-length
        body: |
          # Release Notes

          ## Features

          - Add foo support #issue-ref
          - Add bar support #issue-ref

          ## Bug fixes

          - Fixed foo #issue-ref
          - Fixed bar #issue-ref #pr-ref

          ## Breaking Changes

          - Foo ...
          - Bar ...

          ## Changes since `${{ steps.build_changelog.outputs.fromTag }}`

          ${{ steps.build_changelog.outputs.changelog }}

          ## Images

          - `docker.io/arhatext/runtime-podman:${{ steps.extract_tag.outputs.tag }}`
          - `ghcr.io/arhat-ext/runtime-podman:${{ steps.extract_tag.outputs.tag }}`

          ## Helm Charts

          - Have a look at [ArtifactHub](https://artifacthub.io/packages/helm/arhatext/runtime-podman)
          - Checkout [chart source](https://github.com/arhat-ext/runtime-podman/blob/${{ steps.extract_tag.outputs.tag }}/cicd/deploy/charts/runtime-podman)

    #
    # checksums
    #
    - name: Create Checksum Files
      run: |
        files="sha256 sha512 md5"

        for f in ${files}; do
          printf "# Linux builds\n\n" > "build/${f}.txt"
          cat build/${f}.linux.txt >> "build/${f}.txt"
        done

    - name: Upload sha256
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: sha256.txt
        asset_path: build/sha256.txt
        asset_content_type: text/plain

    - name: Upload sha512
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: sha512.txt
        asset_path: build/sha512.txt
        asset_content_type: text/plain

    - name: Upload md5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: md5.txt
        asset_path: build/md5.txt
        asset_content_type: text/plain

    - name: Upload runtime-podman.linux.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.x86
        asset_path: build/runtime-podman.linux.x86
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.amd64
        asset_path: build/runtime-podman.linux.amd64
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.armv5
        asset_path: build/runtime-podman.linux.armv5
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.armv6
        asset_path: build/runtime-podman.linux.armv6
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.armv7
        asset_path: build/runtime-podman.linux.armv7
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.arm64
        asset_path: build/runtime-podman.linux.arm64
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.ppc64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.ppc64
        asset_path: build/runtime-podman.linux.ppc64
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.ppc64le
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.ppc64le
        asset_path: build/runtime-podman.linux.ppc64le
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.s390x
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.s390x
        asset_path: build/runtime-podman.linux.s390x
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mips
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mips
        asset_path: build/runtime-podman.linux.mips
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mipshf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mipshf
        asset_path: build/runtime-podman.linux.mipshf
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mipsle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mipsle
        asset_path: build/runtime-podman.linux.mipsle
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mipslehf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mipslehf
        asset_path: build/runtime-podman.linux.mipslehf
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mips64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mips64
        asset_path: build/runtime-podman.linux.mips64
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mips64hf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mips64hf
        asset_path: build/runtime-podman.linux.mips64hf
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mips64le
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mips64le
        asset_path: build/runtime-podman.linux.mips64le
        asset_content_type: application/octet-stream

    - name: Upload runtime-podman.linux.mips64lehf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: runtime-podman.linux.mips64lehf
        asset_path: build/runtime-podman.linux.mips64lehf
        asset_content_type: application/octet-stream

    #
    # packages
    #

    # - name: Upload runtime-podman-amd64.deb
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.amd64.deb
    #     asset_path: build/runtime-podman.amd64.deb
    #     asset_content_type: application/vnd.debian.binary-package

    # - name: Upload runtime-podman-x86_64.rpm
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.x86_64.rpm
    #     asset_path: build/runtime-podman.x86_64.rpm
    #     asset_content_type: application/x-rpm

    # - name: Upload runtime-podman-armel.deb
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.armel.deb
    #     asset_path: build/runtime-podman.armel.deb
    #     asset_content_type: application/vnd.debian.binary-package

    # - name: Upload runtime-podman-armhf.deb
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.armhf.deb
    #     asset_path: build/runtime-podman.armhf.deb
    #     asset_content_type: application/vnd.debian.binary-package

    # - name: Upload runtime-podman-armhfp.rpm
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.armhfp.rpm
    #     asset_path: build/runtime-podman.armhfp.rpm
    #     asset_content_type: application/x-rpm

    # - name: Upload runtime-podman-arm64.deb
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.arm64.deb
    #     asset_path: build/runtime-podman.arm64.deb
    #     asset_content_type: application/vnd.debian.binary-package

    # - name: Upload runtime-podman-aarch64.rpm
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: runtime-podman.aarch64.rpm
    #     asset_path: build/runtime-podman.aarch64.rpm
    #     asset_content_type: application/x-rpm
